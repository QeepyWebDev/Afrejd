@page "/Retur"

@using Afrejd.Web.Data.Interfaces
@using Afrejd.Web.Data.Models
@using Afrejd.Web.Components.Layout
@inject ICartService CartService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<PageTitle>Retur av varor</PageTitle>

<article>
    <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class=" py-6">
        <MudPaper Outlined="true" Class="d-flex flex-column">
            <MudPaper Elevation="0" Width="100%" Class="d-flex flex-column flex-md-row justify-space-between pa-6">
                <MudStack Class="d-flex justify-start">
                    <h1 class="display-1">
                        Retur <br />
                        av varor
                    </h1>

                    <MudButton Variant="Variant.Filled" Size="Size.Medium" Style="background-color: #363732; color: white; width:fit-content;" @onclick="AddItemToCart">
                        Lägg i Varukorg
                    </MudButton>

                    <div>
                        @if (!string.IsNullOrEmpty(SuccessMessage))
                        {
                            <div class="alert alert-success" role="alert">
                                @SuccessMessage
                            </div>
                        }
                    </div>
                </MudStack>
                <MudPaper Elevation=0 Class="d-flex justify-content-end">
                    <MudImage Fluid="true" Class="rounded-xl" Src="/Images/stock16.jpg"></MudImage>
                </MudPaper>
            </MudPaper>
            <MudDivider DividerType="DividerType.Middle" Class="my-6" />

            <MudPaper Width="75%" Elevation=0 Style="margin:auto;">
                <h3>Skapa En Smidig E-Handelsupplevelse Med Effektiva Returer</h3>

                <MudText Class="mb-15" Style="font-size: 2em;">
                    Att möjliggöra enkel och smidig returhantering är en viktig faktor för att driva tillväxt inom e-handeln. Ofta är det kunder som känner sig trygga med 
                    att returnera varor som också är mer benägna att bli återkommande och lojala kunder. Genom att erbjuda en positiv och sömlös köpupplevelse kan du bygga 
                    starka relationer med dina kunder och uppmuntra till fortsatt försäljning.
                </MudText>

                <h3>Effektivt varuflöde och sömlösa returer</h3>
                <MudText Class="mb-6">
                    Vi på Afrejd tar hand om hela returprocessen för dig. När dina varor anländer till vårt lager, hanterar vi inlastningen och lagrar dem i vårt handelshotell.
                    Vid varje beställning tar vi emot meddelanden och initierar omedelbart orderbehandling och förberedelse för reklamförpackningar. 
                    Genom vårt system kan försändelser spåras i realtid och mottagaren meddelas om leveransen. Om en kund ångrar sitt köp registrerar vi snabbt en returorder, 
                    förbereder för upphämtning och avbryter beställningen. När varorna återlämnas till vårt lager inspekteras de och sätts tillbaka i omlopp för framtida 
                    försäljning. Genom vårt automatiserade lagersystem uppdateras din lagerstatus kontinuerligt så att du alltid har fullständig översikt.
                </MudText>
            </MudPaper>
        </MudPaper>
    </MudContainer>

    <ServicesPanel />
</article>


@code {
    private string SuccessMessage;
    private string ErrorMessage;
    private int ProductId = 12;

    private async Task AddItemToCart()
    {
        try
        {
            var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity.IsAuthenticated)
            {
                var userId = await CartService.GetUserId();
                await CartService.AddItemToCart(ProductId, userId);
                SuccessMessage = "Tjänsten har lagts till i varukorgen!";
            }
            else
            {
                NavigationManager.NavigateTo("Account/Register");
            }
        }
        catch (ArgumentException ex)
        {
            ErrorMessage = ex.Message;
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred while adding the product to the cart: {ex.Message}";
        }
    }
}