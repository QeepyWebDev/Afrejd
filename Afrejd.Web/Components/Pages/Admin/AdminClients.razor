@page "/Clients"

@using Afrejd.Web.Components.Layout
@using Afrejd.Web.Data
@using Afrejd.Web.Data.Interfaces
@using Afrejd.Web.Data.Models
@using System.Collections.Generic
@inject IUserService UserService
@rendermode InteractiveServer
@layout AdminMenu

<input class="form-control mr-sm-2" type="text" value="@searchString" aria-label="Search" @oninput="SearchCustomers" placeholder="Sök namn eller företag...">
<table class="table">
    <thead>
        <tr>
            <th>Namn</th>
            <th>Företag</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (FilteredCustomers.Any())
        {
            @foreach (var customer in FilteredCustomers)
            {
                if (customer.CustomerInfo != null)
                {
                    foreach (var customerInfo in customer.CustomerInfo)
                    {
                        <tr>
                            <td>@customerInfo.FirstName @customerInfo.LastName</td>
                            <td>@customerInfo.Company</td>
                            <td>
                                <button class="btn btn-dark" @onclick="() => ToggleCustomerDetails(customer)">Visa mer</button>
                            </td>
                        </tr>
                    }
                }
            }
        }
        else
        {
            <tr>
                <td colspan="3">Inga kunder hittades.</td>
            </tr>
        }
    </tbody>
</table>


@if (SelectedCustomer != null && SelectedCustomer.CustomerInfo != null && IsDetailsVisible)
{
    <div>
        <h3>Kundinformation</h3>
        @foreach (var customerInfo in SelectedCustomer.CustomerInfo)
        {
            <p><strong>Namn:</strong> @customerInfo.FirstName @customerInfo.LastName</p>
            <p><strong>Telefonnummer:</strong> @customerInfo.Phone</p>
            <p><strong>Företag:</strong> @customerInfo.Company</p>
            <p><strong>Organisationsnummer:</strong> @customerInfo.OrganizationNumber</p>
            <p><strong>Adress:</strong> @customerInfo.Address</p>
            <p><strong>Stad:</strong> @customerInfo.City</p>
            <p><strong>Postnummer:</strong> @customerInfo.PostalCode</p>
            <p><strong>Län:</strong> @customerInfo.Region</p>
            <p><strong>Land:</strong> @customerInfo.Country</p>
            <hr class="hr" />
        }

        <h3>Ärenden</h3>
        @if (SelectedCustomer.Orders != null) {
            @foreach (var order in SelectedCustomer.Orders)
            {
                <p><strong>Ärendenummer:</strong> @order.Ordernumber</p>
                <p><strong>Datum:</strong> @order.OrderDate.ToShortDateString()</p>
                <p><strong>Status:</strong> @order.Status</p>
                <p><strong>Prisförslag:</strong> @order.PriceEstimate</p>
                <hr class="hr" />
            }
        }
    </div>
}

@code {
    private ApplicationUser SelectedCustomer;

    private bool IsDetailsVisible = false;

    private string searchString = "";
    private IEnumerable<ApplicationUser> Customers = new List<ApplicationUser>(); // Initialize with your data
    private IEnumerable<ApplicationUser> FilteredCustomers => FilterCustomers();

    protected override async Task OnInitializedAsync()
    {
        Customers = await UserService.GetCustomers();
    }

    private IEnumerable<ApplicationUser> FilterCustomers()
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return Customers;

        return Customers.Where(customer =>
            customer.CustomerInfo.Any(customerInfo =>
                customerInfo.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase) ||
                customerInfo.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase) ||
                customerInfo.Company.Contains(searchString, StringComparison.OrdinalIgnoreCase)));
    }

    private void SearchCustomers(ChangeEventArgs e)
    {
        searchString = e.Value.ToString();
    }

    private void ToggleCustomerDetails(ApplicationUser customer)
    {
        SelectedCustomer = customer;
        IsDetailsVisible = !IsDetailsVisible;
    }
}

