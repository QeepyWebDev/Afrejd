@page "/Varukorg"

@using Afrejd.Web.Data.Models
@using System.Security.Claims
@using Afrejd.Web.Data.Interfaces
@rendermode InteractiveServer
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor httpContextAccessor
@inject NavigationManager navigationManager
@inject ICartService CartService

<PageTitle>Varukorg</PageTitle>

@if (CartItems == null || CartItems.Count == 0)
{
    <p>Inga produkter i varukorgen.</p>
}
else
{
    <MudContainer Class="d-flex flex-column align-content-center">
        <table class="table">
            <thead>
                <tr>
                    <th style="font-size: 1.5em;">Tjänst</th>
                    <th style="font-size: 1.5em;">Åtgärd</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var product in CartItems)
                {
                    <tr>
                        <td style="font-size: 2em;">@product.CartProduct.Name</td>
                        <td><button class="btn btn-danger" @onclick="@(async () => await RemoveItem(product.ProductId, product.UserId))">Ta bort</button></td>
                    </tr>
                }
            </tbody>
        </table>

        <div>
            <button type="button" class="btn btn-success" @onclick="GoToCheckout">Till ansökan</button>
        </div>
    </MudContainer>
}

@code {
    private List<Cart> CartItems;
    private decimal TotalPrice;

    protected override async Task OnInitializedAsync()
    {
        var userId = httpContextAccessor.HttpContext.User.FindFirst(ClaimTypes.NameIdentifier)?.Value;
        if (userId != null)
        {
            CartItems = await CartService.GetUserCartItems(userId);
        }
    }

    private async Task RemoveItem(int productId, string userId)
    {
        await CartService.RemoveItemFromCart(productId, userId);

        CartItems = await CartService.GetUserCartItems(userId);
    }

    private void GoToCheckout()
    {
        navigationManager.NavigateTo("/checkout");
    }
}
